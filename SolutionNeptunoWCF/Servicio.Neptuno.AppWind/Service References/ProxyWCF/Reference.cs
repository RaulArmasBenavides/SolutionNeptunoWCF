//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Servicio.Neptuno.AppWind.ProxyWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Empleado", Namespace="http://schemas.datacontract.org/2004/07/Servicio.Neptuno.wcf")]
    [System.SerializableAttribute()]
    public partial class Empleado : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CargoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellidos {
            get {
                return this.ApellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidosField, value) != true)) {
                    this.ApellidosField = value;
                    this.RaisePropertyChanged("Apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cargo {
            get {
                return this.CargoField;
            }
            set {
                if ((object.ReferenceEquals(this.CargoField, value) != true)) {
                    this.CargoField = value;
                    this.RaisePropertyChanged("Cargo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEmpleado {
            get {
                return this.IdEmpleadoField;
            }
            set {
                if ((this.IdEmpleadoField.Equals(value) != true)) {
                    this.IdEmpleadoField = value;
                    this.RaisePropertyChanged("IdEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyWCF.IEmpleadoService")]
    public interface IEmpleadoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoListar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoListarResponse")]
        Servicio.Neptuno.AppWind.ProxyWCF.Empleado[] EmpleadoListar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoListar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoListarResponse")]
        System.Threading.Tasks.Task<Servicio.Neptuno.AppWind.ProxyWCF.Empleado[]> EmpleadoListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoAdicionar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoAdicionarResponse")]
        void EmpleadoAdicionar(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoAdicionar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoAdicionarResponse")]
        System.Threading.Tasks.Task EmpleadoAdicionarAsync(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoActualizar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoActualizarResponse")]
        void EmpleadoActualizar(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoActualizar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoActualizarResponse")]
        System.Threading.Tasks.Task EmpleadoActualizarAsync(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoEliminar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoEliminarResponse")]
        void EmpleadoEliminar(int emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoEliminar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoEliminarResponse")]
        System.Threading.Tasks.Task EmpleadoEliminarAsync(int emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoBuscar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoBuscarResponse")]
        Servicio.Neptuno.AppWind.ProxyWCF.Empleado EmpleadoBuscar(int emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/EmpleadoBuscar", ReplyAction="http://tempuri.org/IEmpleadoService/EmpleadoBuscarResponse")]
        System.Threading.Tasks.Task<Servicio.Neptuno.AppWind.ProxyWCF.Empleado> EmpleadoBuscarAsync(int emp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpleadoServiceChannel : Servicio.Neptuno.AppWind.ProxyWCF.IEmpleadoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpleadoServiceClient : System.ServiceModel.ClientBase<Servicio.Neptuno.AppWind.ProxyWCF.IEmpleadoService>, Servicio.Neptuno.AppWind.ProxyWCF.IEmpleadoService {
        
        public EmpleadoServiceClient() {
        }
        
        public EmpleadoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpleadoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpleadoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpleadoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Servicio.Neptuno.AppWind.ProxyWCF.Empleado[] EmpleadoListar() {
            return base.Channel.EmpleadoListar();
        }
        
        public System.Threading.Tasks.Task<Servicio.Neptuno.AppWind.ProxyWCF.Empleado[]> EmpleadoListarAsync() {
            return base.Channel.EmpleadoListarAsync();
        }
        
        public void EmpleadoAdicionar(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp) {
            base.Channel.EmpleadoAdicionar(emp);
        }
        
        public System.Threading.Tasks.Task EmpleadoAdicionarAsync(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp) {
            return base.Channel.EmpleadoAdicionarAsync(emp);
        }
        
        public void EmpleadoActualizar(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp) {
            base.Channel.EmpleadoActualizar(emp);
        }
        
        public System.Threading.Tasks.Task EmpleadoActualizarAsync(Servicio.Neptuno.AppWind.ProxyWCF.Empleado emp) {
            return base.Channel.EmpleadoActualizarAsync(emp);
        }
        
        public void EmpleadoEliminar(int emp) {
            base.Channel.EmpleadoEliminar(emp);
        }
        
        public System.Threading.Tasks.Task EmpleadoEliminarAsync(int emp) {
            return base.Channel.EmpleadoEliminarAsync(emp);
        }
        
        public Servicio.Neptuno.AppWind.ProxyWCF.Empleado EmpleadoBuscar(int emp) {
            return base.Channel.EmpleadoBuscar(emp);
        }
        
        public System.Threading.Tasks.Task<Servicio.Neptuno.AppWind.ProxyWCF.Empleado> EmpleadoBuscarAsync(int emp) {
            return base.Channel.EmpleadoBuscarAsync(emp);
        }
    }
}
